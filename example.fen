extern (add x y)
extern (sub x y)
extern (mul x y)

extern (printint x)

global (fibonacci n; a b c) {
	let a = -1
	let b = 1
	(printint a)
	(printint b)
	while n >= 0 {
		let c = (add a b)
		(printint c)
		let a = b
		let b = c
		let n = (sub n 1)
	}
	return 0
}

global (factorial n; x) {
	let x = 1
	while n > 0 {
		let x = (mul x n)
		let n = (sub n 1)
	}
	return x
}
